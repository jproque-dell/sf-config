---
- include_tasks: "{{ sf_tasks_dir }}/create_user.yml"
  vars:
    user_name: "{{ owner }}"

- name: Get {{ owner }} uid
  command: id -u {{ owner }}
  register: _lodgeit_id

- name: Get {{ owner }} gid
  command: id -g {{ owner }}
  register: _lodgeit_gid

- name: Setting {{ owner }} uid var
  set_fact:
    lodgeit_uid: "{{ _lodgeit_id.stdout }}"
    lodgeit_gid: "{{ _lodgeit_gid.stdout }}"

- name: Check container image version
  include_role:
    name: sf-container
    tasks_from: check_version.yaml
  loop: "{{ lodgeit_components }}"

- name: Create container directory
  include_role:
    name: sf-container
    tasks_from: create_directory.yaml
  loop:
    - path: "{{ lodgeit_web_resources }}"
      recurse: "yes"
      owner: "root"
      mode: "0755"

- name: Apply selinux port labelling
  seport:
    ports: "{{ lodgeit_port }}"
    proto: tcp
    setype: http_port_t
    state: present
  when:
    - ansible_virtualization_type not in ["podman", "systemd-nspawn"]
    - ansible_selinux.status == "enabled"

- name: Create container
  include_role:
    name: sf-container
    tasks_from: setup.yaml
  loop: "{{ lodgeit_components }}"

- name: Start service
  systemd:
    name: "{{ role_package }}"
    state: started
    daemon_reload: true
    enabled: true

- name: Copying {{ role_package }} Web Page Resources
  block:

    - name: Wait for {{ role_package }} http port
      wait_for:
        port: "{{ lodgeit_port }}"

    # SF Lodgeit installs its own web resources on SF Gateway
    # Instead of SF Gateway having unnecessary packages installed
    - name: "Installing {{ role_package }} Web Page Resources"
      shell: |
            podman cp {{ role_package }}:{{ lodgeit_container_web_resources }} {{ lodgeit_web_resources }}
            mv {{ lodgeit_web_resources }}/static/* {{ lodgeit_web_resources }}
            rm -r {{ lodgeit_web_resources }}/static
      notify: apache reload

  when: "'gateway' in roles"
