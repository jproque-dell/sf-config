---
# Talk directly to gerrit to pre-provision the user.
- name: create test accounts
  command: ssh gerrit gerrit create-account --email demo@{{ fqdn }} demo
  register: test_user_create
  failed_when: test_user_create.rc != 0 and test_user_create.stderr.find("already exists") == -1
  delegate_to: "{{ install_server_host }}"

- name: Check if repository exists
  command: python3 -c "import requests; print('demo-project' in requests.get('{{ managesf_internal_url }}/v2/resources').json().get('resources', {}).get('repos', {}))"
  register: demo_resource

- block:
    - name: Copy demo resources file
      copy:
        src: "demo/config/{{ item }}"
        dest: "/root/config/{{ item }}"
      loop:
        - zuul/demo.yaml

    - name: Provision demo resources in config repo
      command: "{{ item }}"
      args:
        chdir: "/root/config"
      loop:
        - /usr/share/sf-config/scripts/create_project_resources.py --repo demo-project --repo demo-project-distgit --core demo@{{ fqdn }} resources/demo.yaml
        - /usr/local/bin/managesf-resources direct-apply --prev-yaml /var/lib/software-factory/bootstrap-data/empty_resources.yaml --new-yaml resources/demo.yaml
        - git add resources/demo.yaml zuul/demo.yaml
        - git commit -m 'Provision demo resources'
        - git push git+ssh://gerrit/config master
        - logger --tag event-sfconfig "demo-project created"
  when: demo_resource.stdout == 'False'

- stat:
    path: /root/demo-project
  register: demo_project_done

- block:
    - name: Create a temporary clone directory
      command: mktemp -d
      register: demo_tmp

    - name: Clone the demo-project repository
      git:
        repo: git+ssh://gerrit/demo-project
        dest: "{{ demo_tmp.stdout }}"

    - name: Copy demo project files
      copy:
        src: "demo/project/{{ item }}"
        dest: "{{ demo_tmp.stdout }}/{{ item }}"
      loop:
        - .zuul.yaml
        - setup.py
        - setup.cfg
        - tox.ini
        - demo.py

    - name: Push demo project repo
      command: "git {{ item }}"
      args:
        chdir: "{{ demo_tmp.stdout }}"
      loop:
        - "add -A"
        - "commit -m 'Initialize demo-project repository'"
        - "push git+ssh://gerrit/demo-project master"

    - name: Save zuul jobs repo
      command: "mv {{ demo_tmp.stdout }} /root/demo-project"

    - name: Set zuul need restart when changes are pushed (to ensure full reconfigure)
      set_fact:
        zuul_need_restart: True

  when: demo_project_done.stat.exists != True

- stat:
    path: /root/demo-project-distgit
  register: demo_project_distgit_done

- block:
    - name: Create a temporary clone directory
      command: mktemp -d
      register: demo_distgit_tmp

    - name: Clone the demo-project-distgit repository
      git:
        repo: git+ssh://gerrit/demo-project-distgit
        dest: "{{ demo_distgit_tmp.stdout }}"

    - name: Copy demo project files
      copy:
        src: "demo/project-distgit/{{ item }}"
        dest: "{{ demo_distgit_tmp.stdout }}/{{ item }}"
      loop:
        - .zuul.yaml
        - demo-project.spec
        - build-rpm.yaml

    - name: Push demo project distgit repo
      command: "git {{ item }}"
      args:
        chdir: "{{ demo_distgit_tmp.stdout }}"
      loop:
        - "add -A"
        - "commit -m 'Initialize demo-project-distgit repository'"
        - "push git+ssh://gerrit/demo-project-distgit master"

    - name: Save zuul jobs repo
      command: "mv {{ demo_distgit_tmp.stdout }} /root/demo-project-distgit"

    - name: Set zuul need restart when changes are pushed (to ensure full reconfigure)
      set_fact:
        zuul_need_restart: True
  when: demo_project_distgit_done.stat.exists != True
