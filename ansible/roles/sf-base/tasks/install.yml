---
- name: Set yum.conf retries
  lineinfile:
    dest: /etc/yum.conf
    regexp: "^retries="
    line: "retries=30"

- name: Enable codeready-builder-for-rhel-9 for it needed for installing epel on rhel
  shell: subscription-manager repos --enable codeready-builder-for-rhel-9-$(arch)-rpms

- name: Get gpg keys for rpms
  get_url:
    url: "{{ url }}"
    dest: "/etc/pki/rpm-gpg/{{ url | basename }}"
    mode: '0440'
  loop: "{{ gpg_keys_url }}"
  loop_control:
    loop_var: url

- name: Install gpg keys for rpms
  ansible.builtin.command: "rpm --import /etc/pki/rpm-gpg/{{ url | basename }}"
  when: (url | basename) != "RPM-GPG-KEY-CentOS-SIG-Cloud"
  loop: "{{ gpg_keys_url }}"
  loop_control:
    loop_var: url

- name: Add epel repo
  dnf:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm

- name: Add /etc/yum.repos.d/CentOS-OpenStack-antelope.repo
  ansible.builtin.copy:
    content: |
      [centos-openstack-antelope]
      name=CentOS-$releasever - OpenStack antelope
      metalink=https://mirrors.centos.org/metalink?repo=centos-cloud-sig-openstack-antelope-$releasever-stream&arch=$basearch&protocol=https,http
      gpgcheck=1
      enabled=1
      gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Cloud
      module_hotfixes=1
    dest: /etc/yum.repos.d/CentOS-OpenStack-antelope.repo

- name: Install useful packages
  yum:
    name:
      - haveged
      - logrotate
      - git
      - chrony
      - patch
      - postfix
      - rsyslog
      - tmux
      - vim-enhanced
      - podman
      - python3-pip
      - langpacks-en
      - glibc-all-langpacks
      # Needed by ansible selinux module
      - python3-libsemanage
      - policycoreutils-python-utils
      # Needed for wait4 scripts
      - nmap-ncat
      # Needed by very minimal instance
      - rsync
      - traceroute
      - sudo
      - openssh-server
      - sudo
      - crontabs
    state: present
    disablerepo: '{{ yum_disable_repo|default(omit) }}'
    enablerepo: '{{ yum_enable_repo|default(omit) }}'

- name: Check for selinux config
  stat:
    path: /etc/selinux/config
  register: _selinux_config

- name: Set permissive selinux
  lineinfile:
    dest: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=permissive'
  when:
    - _selinux_config.stat.exists
    - ansible_virtualization_type not in ["podman", "systemd-nspawn"]

- name: Remove selinux autorelabel
  file:
    path: /.autorelabel
    state: absent

- name: Check for python3 scl
  stat:
    path: /opt/rh/rh-python35/root/usr/bin/python3.5
  register: _python35_installed

- name: Create symlink libpython3.5
  file:
    src: "/opt/rh/rh-python35/root/{{ item }}"
    dest: "/usr/{{ item }}"
    state: link
    force: yes
  when: _python35_installed.stat.exists
  loop:
    - "lib64/libpython3.so.rh-python35"
    - "lib64/libpython3.5m.so.rh-python35-1.0"
    - "lib64/python3.5"
    - "lib/python3.5"

- name: Create necessary directories
  file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: '0755'
    state: directory
  with_items:
    - /usr/libexec/software-factory
    - /var/lib/software-factory/versions
    - /var/lib/software-factory/state
    - /var/log/software-factory

- name: Install libexec scripts
  copy:
    src: "{{ item }}"
    dest: "/usr/libexec/software-factory/{{ item }}"
    mode: '0555'
  loop:
    - wait4port
    - wait4mariadb
    - wait4gerrit
