---
- name: Wait for Opensearch service
  wait_for:
    host: '{{ opensearch_host }}'
    port: '{{ opensearch_http_port }}'
    delay: 10
    timeout: 600

# Configure ISM - Index State Management
# NOTE: the '*' will be added to the index name on creating the policy.
- name: Configure Index State Management
  include_tasks: create_ism.yml
  loop:
    - policy_name: "logstash-policy"
      index_name: "logstash-"
      retention_time: "{{ logstash_retention_days | default(14) }}d"
    - policy_name: "zuul-policy"
      index_name: "zuul."
      retention_time: "{{ zuul_retention_days | default(180) }}d"
    # Create universal ISM policy that does not provide index
    - policy_name: "universal-policy"
      retention_time: "14d"

- name: Configure Opensearch replicas
  uri:
    url: '{{ opensearch_internal_url }}/_template/default_settings'
    method: PUT
    body_format: json
    client_cert: "{{ elk_stack_certs }}/opensearch-admin.crt"
    client_key: "{{ elk_stack_certs }}/opensearch-admin.key"
    body: '{
              "template" : "*",
              "settings" : {
                  "number_of_replicas" : {{ opensearch_replicas }}
              }
          }'
    status_code: 200
    validate_certs: true

- name: Check if indexes replicas number should be updated
  uri:
    url: '{{ opensearch_internal_url }}/_settings?pretty'
    method: GET
    status_code: 200
    client_cert: "{{ elk_stack_certs }}/opensearch-admin.crt"
    client_key: "{{ elk_stack_certs }}/opensearch-admin.key"
    validate_certs: true
  register: json_response

- name: Update number of replicas for all existing indexes
  uri:
    url: "{{ opensearch_internal_url }}/*/_settings"
    method: PUT
    body_format: json
    client_cert: "{{ elk_stack_certs }}/opensearch-admin.crt"
    client_key: "{{ elk_stack_certs }}/opensearch-admin.key"
    body: '{ "index":
             { "number_of_replicas": {{ opensearch_replicas }}
             }
           }'
    status_code: 200
    validate_certs: true
  when: json_response.json != {}
