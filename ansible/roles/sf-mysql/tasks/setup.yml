---
- name: Create container directory
  include_role:
    name: sf-container
    tasks_from: create_directory.yaml
  loop:
    - path: "{{ mysql_config_drop_in_dir }}"
      mode: "0755"
      recurse: "yes"
    - path: "{{ mysql_var_run_dir }}"
      mode: "0755"
      recurse: "yes"
    - path: "{{ mysql_var_lib }}"
      mode: "0755"
      recurse: "yes"
    - path: "{{ mariadb_sql_dir }}"
      mode: "0755"
      recurse: "yes"

- name: Check container image version
  include_role:
    name: sf-container
    tasks_from: check_version.yaml
  loop: "{{ mysql_components }}"

- name: Apply selinux port labelling
  seport:
    ports: "{{ mysql_port }}"
    proto: tcp
    setype: mysqld_port_t
    state: present
  when:
    - ansible_virtualization_type not in ["podman", "systemd-nspawn"]
    - ansible_selinux.status == "enabled"

# original files was in /etc/my.cnf do not forgt to copy them to at upgrade
- name: Copy MariaDB configuration
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "0644"
  loop:
    - src: "templates/my.cnf.j2"
      dest: "{{ mysql_config_dir }}/my.cnf"
    - src: "templates/client.cnf.j2"
      dest: "{{ mysql_config_dir }}/.my.cnf"

- name: Setup create_database sql query
  template:
    src: create_databases.sql.j2
    dest: "{{ mariadb_sql_dir }}/databases.sql"
  register: databases_setup

- name: Set wait_timeout to 2 weeks
  ini_file:
    dest: "{{ mysql_config_drop_in_dir }}/mariadb-server.cnf"
    section: server
    option: wait_timeout
    value: '1209600'

- name: "Get {{ owner }} uid"
  command: "id -u {{ owner }}"
  register: _user_id

- name: "Get {{ owner }} gid"
  command: "id -g {{ owner }}"
  register: _usergroup_gid

- name: "Setting {{ owner }} vars"
  set_fact:
    user_uid: "{{ _user_id.stdout }}"
    usergroup_gid: "{{ _usergroup_gid.stdout }}"

- name: Create container
  include_role:
    name: sf-container
    tasks_from: setup.yaml
  loop: "{{ mysql_components }}"

- name: Start service
  systemd:
    name: "{{ role_package }}"
    state: started
    daemon_reload: "yes"
    enabled: "yes"

- name: "Check if {{ role_package }} is running"
  command: systemctl is-active -q {{ role_package }}
  register: _mysql_service
  failed_when: _mysql_service.rc not in [0, 3]
  changed_when: false

- name: "Wait for {{ role_package }} to be ready"
  wait_for:
    port: "{{ mysql_port }}"
    delay: 10
  register: _is_mysql_ready
  retries: 10
  delay: 10
  until:
    - _is_mysql_ready.msg is not defined

- name: ensure anonymous users are not in the database
  mysql_user:
    name: ''
    host: "{{ item }}"
    state: absent
    config_file: "{{ mysql_config_dir }}/.my.cnf"
    login_unix_socket: "{{ mysql_var_run_dir }}/mysqld.sock"
  no_log: true
  loop:
    - localhost
    - "{{ ansible_hostname }}"

- name: Ensure all databases are created
  shell: >
    podman exec {{ role_package }} sh -c ' mysql
    -uroot -p$MYSQL_ROOT_PASSWORD < {{ container_dir_sql_file }}'
  when: databases_setup.changed

- name: remove useless databases if present
  mysql_db:
    name: "{{ item }}"
    state: absent
    config_file: "{{ mysql_config_dir }}/.my.cnf"
    login_unix_socket: "{{ mysql_var_run_dir }}/mysqld.sock"
  loop:
    - test
