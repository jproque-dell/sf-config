---
role_actions:
  - install
  - setup
  - get_logs
  - backup
  - restore
  - disable


role_package: mysql

owner: mysql
group: mysql
container_uid: 999
container_gid: 999

container_tag: "10.3.10"
container_version: 1

mysql_host: "mysql.example.com"
mysql_root_password: "CHANGE_ME"

mysql_databases: {}

mysql_config_dir: /etc/mysql
mysql_config_drop_in_dir: /etc/mysql/conf.d
mysql_var_run_dir: /var/run/mysqld
mysql_var_lib: /var/lib/mysql

mysql_port: 3306

mysql_components:
  - service: "{{ role_package }}"
    image: "quay.io/software-factory/mariadb:{{container_tag}}-{{container_version}}"
    params: >-
      --network host
      --user {{ container_uid }}:{{ container_gid }}
      --uidmap {{ container_uid }}:{{ user_uid | default(1000) }}:1
      --gidmap {{ container_uid }}:{{ usergroup_gid | default(1000) }}:1
      --uidmap 0:4000:998
      --gidmap 0:4000:998
      --env MYSQL_ROOT_PASSWORD={{ mysql_root_password }}
      --volume {{ mysql_config_dir }}/my.cnf:{{ mysql_config_dir }}/my.cnf:z
      --volume {{ mysql_config_dir }}/.my.cnf:/root/.my.cnf:z
      --volume {{ mariadb_sql_dir }}:{{ container_dir }}:z
      --volume {{ mysql_config_drop_in_dir }}:{{ mysql_config_drop_in_dir }}:z
      --volume {{ mysql_var_run_dir }}:{{ mysql_var_run_dir }}:z
      --volume {{ mysql_var_lib }}:{{ mysql_var_lib }}:z
      {% if sf_mysql_additional_params is defined %}
      {{ sf_mysql_additional_params }}
      {% endif %}

# Vars to pass linter check
mariadb_sql_dir: /var/lib/software-factory/sql
container_dir: /docker-entrypoint-initdb.d
mariadb_host_sql_file: "{{ mariadb_sql_dir }}/databases.sql"
container_dir_sql_file: "{{ container_dir }}/databases.sql"
container_mariadb_file: "{{ mysql_config_drop_in_dir }}/mariadb-server.cnf"
