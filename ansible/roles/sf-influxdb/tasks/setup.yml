---
- include_tasks: "{{ sf_tasks_dir }}/create_user.yml"
  vars:
    user_name: "{{ owner }}"

- name: Get {{ owner }} uid
  command: id -u {{ owner }}
  register: _influxdb_id

- name: Get {{ owner }} gid
  command: id -g {{ owner }}
  register: _influxdb_gid

- name: Setting {{ owner }} uid var
  set_fact:
    influxdb_uid: "{{ _influxdb_id.stdout }}"
    influxdb_gid: "{{ _influxdb_gid.stdout }}"

- name: Check container image version
  include_role:
    name: sf-container
    tasks_from: check_version.yaml
  loop: "{{ influxdb_components }}"

- name: Create container directory
  include_role:
    name: sf-container
    tasks_from: create_directory.yaml
  loop:
    - path: "{{ influxdb_config_dir }}"
      recurse: "yes"
      owner: "{{ owner }}"
      group: "{{ group }}"
      mode: "0750"
    - path: "{{ influxdb_log_dir }}"
      recurse: "yes"
      owner: "{{ owner }}"
      group: "{{ group }}"
      mode: "0750"
    - path: "{{ influxdb_data_dir }}"
      recurse: "yes"
      owner: "{{ owner }}"
      group: "{{ group }}"
      mode: "0750"

- name: Apply selinux port labelling
  seport:
    ports: "{{ influxdb_port }}"
    proto: "tcp"
    setype: "http_port_t"
    state: present
  when:
    - ansible_virtualization_type not in ["podman", "systemd-nspawn"]
    - ansible_selinux.status == "enabled"

- name: Setup config files
  template:
    src: "{{ item }}.j2"
    dest: "{{ influxdb_config_dir }}/{{ item }}"
  loop:
    - influxdb.conf

- name: Add crt and key files if needed
  copy:
    content: "{{ item.content }}"
    dest: "{{ influxdb_config_dir }}/{{ item.dest }}"
    mode: "{{ item.mode|default('0444') }}"
    owner: "{{ owner }}"
    setype: cert_t
    seuser: system_u
    serole: object_r
  loop:
    - {content: "{{ influxdb_crt}}", dest: "influxdb.crt"}
    - {content: "{{ influxdb_key }}", dest: "influxdb.key", mode: '0400'}
  no_log: show_hidden_logs == False

- name: Configure influxdb to use tls
  ini_file:
    dest: "{{ influxdb_config_dir }}/influxdb.conf"
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  loop:
    - {section: http, option: auth-enabled, value: 'true'}
    - {section: http, option: https-enabled, value: 'true'}
    - {section: http, option: https-certificate, value: '"{{ influxdb_config_dir }}/influxdb.crt"'}
    - {section: http, option: https-private-key, value: '"{{ influxdb_config_dir }}/influxdb.key"'}
    - {section: http, option: bind-address, value: '":{{ influxdb_port }}"'}
  notify: restart influxdb

- name: Create container
  include_role:
    name: sf-container
    tasks_from: setup.yaml
  loop: "{{ influxdb_components }}"

- name: Restart influxdb when fqdn is updated to use new crt
  systemd:
    name: "{{ role_package }}"
    state: restarted
  when: update_fqdn

- name: Start service
  systemd:
    name: "{{ role_package }}"
    state: restarted
    daemon_reload: true
    enabled: true

- include_tasks: influxdb_configuration.yml
