---
- name: Ensure /var/lib/software-factory/state/managesf_config exists
  file:
    path: /var/lib/software-factory/state/managesf_config
    state: touch
  changed_when: False

- name: Check local config
  command: cat /var/lib/software-factory/state/managesf_config
  changed_when: False
  register: localconfig

- name: Check upstream config
  command: git log --no-decorate -n 3 --oneline resources/
  args:
    chdir: /root/config
  changed_when: False
  register: upstreamconfig

- block:
    - name: Exec resources apply
      command: >
        /usr/local/bin/managesf-resources apply
        --zuul-prev-commit {{ localconfig.stdout_lines[0].split()[0] }}
        --log-output {{ managesf_log_dir }}/resources_apply.log
      register: output
      changed_when: false
      ignore_errors: yes
      when: localconfig.stdout_lines

    - name: Write config repo sha1 matching current configuration
      copy:
        content: "{{ upstreamconfig.stdout }}"
        dest: /var/lib/software-factory/state/managesf_config

    - name: Show resources apply output
      debug:
        msg: "{{ output.stdout_lines }}"
      when: output.stdout_lines|default(False)

    - name: Check if it failed
      fail:
        msg: "Resources apply failed {{ output.rc }}"
      when: output.rc|default(0) != 0
  when:
    - "'gerrit' in roles"
    - localconfig.stdout != upstreamconfig.stdout

- name: Update cached resources
  shell: |
    curl {{ managesf_internal_url }}/v2/resources > /var/www/api/resources.json.new
    mv /var/www/api/resources.json.new /var/www/api/resources.json
  delegate_to: "{{ gateway_host }}"
  when:
    - localconfig.stdout != upstreamconfig.stdout

- name: Create zuul-related roles in keycloak for new tenants
  shell: "{{ item }}"
  environment:
    KC_ADMIN_PASSWORD: "{{ authentication.admin_password }}"
  loop:
    - git config --global --add safe.directory /var/lib/software-factory/managesf-keycloak/sync-roles
    - "/usr/local/bin/managesf-keycloak --kc-api {{ keycloak_internal_url }}/auth --debug sync-roles"
  when:
    - localconfig.stdout != upstreamconfig.stdout

- name: Apply new policy.yaml
  copy:
    src: /root/config/policies/policy.yaml
    dest: "{{ managesf_config_dir }}/policy.yaml"
