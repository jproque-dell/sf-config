---
- include_tasks: "{{ sf_tasks_dir }}/create_user.yml"
  vars:
    user_name: "{{ owner }}"

- name: Get {{ owner }} uid
  command: id -u {{ owner }}
  register: _murmur_id

- name: Get {{ owner }} gid
  command: id -g {{ owner }}
  register: _murmur_gid

- name: Setting {{ owner }} uid var
  set_fact:
    murmur_uid: "{{ _murmur_id.stdout }}"
    murmur_gid: "{{ _murmur_gid.stdout }}"

#- include_tasks: "{{ sf_tasks_dir }}/check_version.yml"
- name: Check container image version
  include_role:
    name: sf-container
    tasks_from: check_version.yaml
  loop: "{{ murmur_components }}"

- name: Create container directory
  include_role:
    name: sf-container
    tasks_from: create_directory.yaml
  loop:
    - path: "{{ murmur_config_dir }}"
      recurse: "yes"
      owner: "{{ owner }}"
      mode: "0755"

- name: Apply selinux port labelling
  seport:
    ports: "64738"
    proto: "{{ item.proto }}"
    setype: "{{ item.setype }}"
    state: present
  when:
    - ansible_virtualization_type not in ["podman", "systemd-nspawn"]
    - ansible_selinux.status == "enabled"
  loop:
    - proto: tcp
      setype: http_port_t
    - proto: udp
      setype: http_cache_port_t

- name: Install config file
  template:
    src: "umurmurd.conf.j2"
    dest: /etc/{{ role_package }}/{{ role_package }}.conf
    owner: root
    group: "{{ role_package }}"
    mode: '0440'
  notify: "restart {{ role_package }}"

- name: Create container
  include_role:
    name: sf-container
    tasks_from: setup.yaml
  loop: "{{ murmur_components }}"

- name: Start service
  systemd:
    name: "{{ role_package }}"
    state: started
    daemon_reload: true
    enabled: true
