---
# Create or updates keycloak users
#
# Inputs:
#
#   Object with the following attributes:
#        username - user name
#        password - user password
#        firstName - user first name
#        lastName - user last name
#        email - user email
#
# This task executes following the steps below:

# 1. Create user with username, password, firstName, lastName and email
- name: "create user {{ item.username }} if needed"
  command: |
    podman exec -ti {{ service_name }}
    {{ keycloak_dir }}/bin/kcadm.sh create users
        --target-realm {{ keycloak_default_realm }}
        --set "username={{ item.username }}"
        --set "email={{ item.email }}"
        --set "firstName={{ item.firstName }}"
        --set "lastName={{ item.lastName }}"
        --set "enabled=true"
        {{ kcadm_options }}
  register: _user_create
  failed_when: _user_create.rc != 0 and not ( _user_create.stdout is search("User exists", multiline=True, ignorecase=True) )
  no_log: "{{ show_hidden_logs }}"

# 2. Get user data
- name: "Get {{ item.username }} data"
  command: |
    podman exec -ti {{ service_name }}
    {{ keycloak_dir }}/bin/kcadm.sh get users
        --compressed
        --query username={{ item.username }}
        --target-realm {{ keycloak_default_realm }}
        {{ kcadm_options }}
  register: _user_data

- name: "Set {{ item.username }} user ID"
  set_fact:
    kuid: "{{ _user_data.stdout_lines | last | from_json }}"
  no_log: "{{ show_hidden_logs }}"

# 3. Updates user password
- name: "Update {{ item.username }}'s password"
  command: |
    podman exec -ti {{ service_name }}
    {{ keycloak_dir }}/bin/kcadm.sh set-password
        --target-realm {{ keycloak_default_realm }}
        --userid {{ kuid[0]['id'] }}
        --new-password {{ item.password }}
        {{ kcadm_options }}
  register: _user_update
  when: item.password is defined
  no_log: "{{ show_hidden_logs }}"

# 4. Updates user email only if fqdn name changed
- name: "Update {{ item.username }}'s email if fqdn has changed"
  command: >
    podman exec -ti {{ service_name }}
    {{ keycloak_dir }}/bin/kcadm.sh update users/{{ kuid[0]['id'] }}
        --target-realm {{ keycloak_default_realm }}
        --set 'email={{ item.email }}'
        {{ kcadm_options }}
  register: _user_email_update
  no_log: "{{ show_hidden_logs }}"
  when: update_fqdn

# 5. Assings user as administrator of the target realm
- name: "allow {{ item.username }} to manage the realm"
  command: >
    podman exec -ti {{ service_name }}
    {{ keycloak_dir }}/bin/kcadm.sh add-roles
        --target-realm {{ keycloak_default_realm }}
        --uusername {{ item.username|lower }}
        --cclientid realm-management
        --rolename manage-realm
        --rolename manage-users
        {{ kcadm_options }}
  when: realm_admin
  no_log: "{{ show_hidden_logs }}"
