---
# Create or update keycloak roles
#
# Inputs:
#
#   Object with the following attributes:
#    - component: "opensearch",
#       roles:
#          - name - role name
#            description - role description
#            default - add role to default realm (true/false)
#            assign_to - assing role to users
#
# This task executes following the steps below:


- block:
  # 1. Create role with name and description
  - name: "Create role {{ item.name }} if needed"
    command: >
      podman exec -ti {{ service_name }}
      {{ keycloak_dir }}/bin/kcadm.sh create roles
          --target-realm  {{ keycloak_default_realm }}
          --set 'name={{ item.name }}'
          --set 'description={{ item.description }}'
          {{ kcadm_options }}
    register: _role
    failed_when: _role.rc != 0 and not ( _role.stdout is search("already exists", multiline=True, ignorecase=True) )
    no_log: "{{ show_hidden_logs }}"

  # 2. Assign role to default realm roles
  - name: "Add role {{ item.name }} to default realm roles"
    command: >
      podman exec -ti {{ service_name }}
      {{ keycloak_dir }}/bin/kcadm.sh add-roles
          --target-realm  {{ keycloak_default_realm }}
          --rname default-roles-sf
          --rolename {{ item.name }}
          {{ kcadm_options }}
    when: item.default == True
    no_log: "{{ show_hidden_logs }}"
    register: _role
    failed_when: _role.rc != 0

  # 3. Assign role to users
  - name: assign role {{ item.name }} to user {{ user_item }}
    # not a typo, parameters are weird
    command: >
      podman exec -ti {{ service_name }}
      {{ keycloak_dir }}/bin/kcadm.sh add-roles
          --target-realm  {{ keycloak_default_realm }}
          --uusername {{ user_item|lower }}
          --rolename {{ item.name }}
          {{ kcadm_options }}
    no_log: "{{ show_hidden_logs }}"
    loop: "{{ item.assign_to }}"
    loop_control:
      loop_var: user_item
