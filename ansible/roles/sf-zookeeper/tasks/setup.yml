---
- name: Check container image version
  include_role:
    name: sf-container
    tasks_from: check_version.yaml
  loop: "{{ zookeeper_components }}"

- name: Create container directory
  include_role:
    name: sf-container
    tasks_from: create_directory.yaml
  loop:
    - path: "{{ zookeeper_config_dir }}"
    - path: "{{ zookeeper_lib_dir }}"
      mode: "0750"
      recurse: "yes"
    - path: "{{ zookeeper_lib_dir }}/data"
    - path: "{{ zookeeper_lib_dir }}/datalog"
    - path: "{{ zookeeper_lib_dir }}/version-2"

- name: Apply selinux port labelling
  seport:
    ports: "{{ item }}"
    proto: tcp
    setype: http_port_t
    state: present
  loop:
    - "{{ zookeeper_secure_client_port }}"
    - "{{ zookeeper_follower_port }}"
    - "{{ zookeeper_election_port }}"
    - "{{ zookeeper_admin_server_port }}"
  when:
    - ansible_virtualization_type not in ["podman", "systemd-nspawn"]
    - ansible_selinux.status == "enabled"

- name: Setup CA file
  copy:
    content: "{{ zk_ca_pem }}"
    dest: "{{ zookeeper_config_dir }}/zk-ca.pem"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: '0444'

- name: Setup TLS file
  copy:
    content: "{{ zk_keys[ansible_fqdn] }}"
    dest: "{{ zookeeper_config_dir }}/server.pem"
    mode: '0400'
    owner: "{{ owner }}"
    group: "{{ group }}"
  notify: restart {{ owner }}

- name: Setup zoo.cfg
  template:
    src: zoo.cfg.j2
    dest: "{{ zookeeper_config_dir }}/zoo.cfg"
    owner: "{{ owner }}"
    group: "{{ group }}"
    mode: '0644'
  notify: restart {{ owner }}

- name: Get {{ owner }} uid
  command: id -u {{ owner }}
  register: _zookeeper_id

- name: Get {{ owner }} gid
  command: id -g {{ owner }}
  register: _zookeeper_gid

- name: Setting {{ owner }} uid var
  set_fact:
    zookeeper_uid: "{{ _zookeeper_id.stdout }}"
    zookeeper_gid: "{{ _zookeeper_gid.stdout }}"

- name: Create container
  include_role:
    name: sf-container
    tasks_from: setup.yaml
  loop: "{{ zookeeper_components }}"

- name: Start service
  systemd:
    name: "{{ role_package }}"
    state: started
    daemon_reload: "yes"
    enabled: "yes"
